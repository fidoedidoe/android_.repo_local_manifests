diff --git a/Makefile b/Makefile
index 3e1db377..c4eb1350 100755
--- a/Makefile
+++ b/Makefile
@@ -246,7 +246,7 @@ CONFIG_SHELL := $(shell if [ -x "$$BASH" ]; then echo $$BASH; \
 HOSTCC       = gcc
 HOSTCXX      = g++
 HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O3 -fomit-frame-pointer -fgcse-las
-HOSTCXXFLAGS = -O3 -fgcse-lm -fgcse-sm -fsched-spec-load -fforce-addr -fsingle-precision-constant -mcpu=cortex-a7 -mtune=cortex-a7 -marm -mfpu=neon-vfpv4 -ftree-vectorize -mvectorize-with-neon-quad
+HOSTCXXFLAGS = -O3 -fgcse-lm -fgcse-sm -fsched-spec-load -fforce-addr -fsingle-precision-constant -mcpu=cortex-a7 -marm -mfpu=neon-vfpv4 -ftree-vectorize -mvectorize-with-neon-quad
 
 # Decide whether to build built-in, modular, or both.
 # Normally, just do built-in.
@@ -347,8 +347,8 @@ CHECK		= sparse
 
 CHECKFLAGS     := -D__linux__ -Dlinux -D__STDC__ -Dunix -D__unix__ \
 		  -Wbitwise -Wno-return-void $(CF)
-MODFLAGS	 = 	-DMODULE -O3 -fgcse-lm -fgcse-sm -fsched-spec-load -fforce-addr -fsingle-precision-constant -fno-pic -marm -mtune=cortex-a7 -mfpu=neon-vfpv4 -ftree-vectorize -mvectorize-with-neon-quad
-KERNELFLAGS	= -pipe -DNDEBUG -O3 -munaligned-access -mtune=cortex-a7 -mfpu=neon-vfpv4 -fgraphite -frename-registers -frerun-cse-after-loop -fira-loop-pressure -fforce-addr -ftree-loop-distribution -fsection-anchors -ftree-loop-im -ftree-loop-ivcanon -funswitch-loops -funsafe-math-optimizations -funsafe-loop-optimizations -funroll-loops -Wno-error=unused-parameter -Wno-error=unused-but-set-variable -Wno-error=maybe-uninitialized -floop-parallelize-all -ftree-loop-linear -floop-interchange -floop-strip-mine -floop-block -floop-flatten -fgcse-after-reload -fgcse-las -fgcse-sm -fweb -ffp-contract=fast -ftree-vectorize
+MODFLAGS	 = 	-DMODULE -O3 -fgcse-lm -fgcse-sm -fsched-spec-load -fforce-addr -fsingle-precision-constant -fno-pic -marm -mcpu=cortex-a7 -mfpu=neon-vfpv4 -ftree-vectorize -mvectorize-with-neon-quad
+KERNELFLAGS	= -pipe -DNDEBUG -O3 -munaligned-access -mcpu=cortex-a7 -mfpu=neon-vfpv4 -fgraphite -frename-registers -frerun-cse-after-loop -fira-loop-pressure -fforce-addr -ftree-loop-distribution -fsection-anchors -ftree-loop-im -ftree-loop-ivcanon -funswitch-loops -funsafe-math-optimizations -funsafe-loop-optimizations -funroll-loops -Wno-error=unused-parameter -Wno-error=unused-but-set-variable -Wno-error=maybe-uninitialized -floop-parallelize-all -ftree-loop-linear -floop-interchange -floop-strip-mine -floop-block -floop-flatten -fgcse-after-reload -fgcse-las -fgcse-sm -fweb -ffp-contract=fast -ftree-vectorize
 CFLAGS_MODULE   = $(MODFLAGS)
 AFLAGS_MODULE   = $(MODFLAGS)
 LDFLAGS_MODULE  =
diff --git a/drivers/gpu/arm/mali400/Makefile b/drivers/gpu/arm/mali400/Makefile
index 7c5487c4..d1429b8a 100644
--- a/drivers/gpu/arm/mali400/Makefile
+++ b/drivers/gpu/arm/mali400/Makefile
@@ -2,4 +2,4 @@ obj-$(CONFIG_MALI_VER_R3P2_REL2) += r3p2_rel2/
 obj-$(CONFIG_MALI_VER_R4P0_REL0) += r4p0_rel0/
 obj-$(CONFIG_MALI400_UMP)        += ump_r3p2/
 
-EXTRA_CFLAGS += -Idrivers/gpu/arm/mali400 -O3 -ffast-math -fgcse-lm -fgcse-sm -fsched-spec-load -fforce-addr -fsingle-precision-constant -mcpu=cortex-a7 -mtune=cortex-a7 -marm -mfpu=neon-vfpv4
+EXTRA_CFLAGS += -Idrivers/gpu/arm/mali400 -O3 -ffast-math -fgcse-lm -fgcse-sm -fsched-spec-load -fforce-addr -fsingle-precision-constant -mcpu=cortex-a7 -marm -mfpu=neon-vfpv4
diff --git a/arch/arm/mm/Makefile b/arch/arm/mm/Makefile
index 3c3e0472..599ed633 100644
--- a/arch/arm/mm/Makefile
+++ b/arch/arm/mm/Makefile
@@ -28,7 +28,7 @@ obj-$(CONFIG_CPU_ABRT_EV6)	+= abort-ev6.o
 obj-$(CONFIG_CPU_ABRT_EV7)	+= abort-ev7.o
 
 AFLAGS_abort-ev6.o	:=-Wa,-march=armv6k
-AFLAGS_abort-ev7.o	:=-Wa,-march=armv7-a
+AFLAGS_abort-ev7.o	:=-Wa,-mcpu=cortex-a7
 
 obj-$(CONFIG_CPU_PABRT_LEGACY)	+= pabort-legacy.o
 obj-$(CONFIG_CPU_PABRT_V6)	+= pabort-v6.o
@@ -43,7 +43,7 @@ obj-$(CONFIG_CPU_CACHE_V7)	+= cache-v7.o
 obj-$(CONFIG_CPU_CACHE_FA)	+= cache-fa.o
 
 AFLAGS_cache-v6.o	:=-Wa,-march=armv6
-AFLAGS_cache-v7.o	:=-Wa,-march=armv7-a
+AFLAGS_cache-v7.o	:=-Wa,-mcpu=cortex-a7
 
 obj-$(CONFIG_CPU_COPY_V3)	+= copypage-v3.o
 obj-$(CONFIG_CPU_COPY_V4WT)	+= copypage-v4wt.o
@@ -65,7 +65,7 @@ obj-$(CONFIG_CPU_TLB_V7)	+= tlb-v7.o
 obj-$(CONFIG_CPU_TLB_FA)	+= tlb-fa.o
 
 AFLAGS_tlb-v6.o		:=-Wa,-march=armv6
-AFLAGS_tlb-v7.o		:=-Wa,-march=armv7-a
+AFLAGS_tlb-v7.o		:=-Wa,-mcpu=cortex-a7
 
 obj-$(CONFIG_CPU_ARM610)	+= proc-arm6_7.o
 obj-$(CONFIG_CPU_ARM710)	+= proc-arm6_7.o
@@ -96,7 +96,7 @@ obj-$(CONFIG_CPU_V7)		+= proc-v7.o
 
 AFLAGS_proc-v6.o	:=-Wa,-march=armv6
 plus_sec := $(call as-instr,.arch_extension sec,+sec)
-AFLAGS_proc-v7.o	:=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_proc-v7.o	:=-Wa,-mcpu=cortex-a7$(plus_sec)
 
 obj-$(CONFIG_CACHE_FEROCEON_L2)	+= cache-feroceon-l2.o
 obj-$(CONFIG_CACHE_L2X0)	+= cache-l2x0.o
diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index ff77782d..f99be559 100644
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -65,7 +65,7 @@ KBUILD_CFLAGS	+= $(call cc-option,-fno-ipa-sra)
 # Note that GCC does not numerically define an architecture version
 # macro, but instead defines a whole series of macros which makes
 # testing for a specific architecture or later rather impossible.
-arch-$(CONFIG_CPU_32v7)		:=-D__LINUX_ARM_ARCH__=7 $(call cc-option,-march=armv7-a,-march=armv5t -Wa$(comma)-march=armv7-a)
+arch-$(CONFIG_CPU_32v7)		:=-D__LINUX_ARM_ARCH__=7 $(call cc-option,-mcpu=cortex-a7,-mcpu=cortext-a7 -Wa$(comma)-mcpu=cortex-a7)
 arch-$(CONFIG_CPU_32v6)		:=-D__LINUX_ARM_ARCH__=6 $(call cc-option,-march=armv6,-march=armv5t -Wa$(comma)-march=armv6)
 # Only override the compiler option if ARMv6. The ARMv6K extensions are
 # always available in ARMv7
diff --git a/arch/arm/mach-imx/Makefile b/arch/arm/mach-imx/Makefile
index ab939c50..3b638320 100644
--- a/arch/arm/mach-imx/Makefile
+++ b/arch/arm/mach-imx/Makefile
@@ -67,7 +67,7 @@ obj-$(CONFIG_HAVE_IMX_GPC) += gpc.o
 obj-$(CONFIG_HAVE_IMX_MMDC) += mmdc.o
 obj-$(CONFIG_HAVE_IMX_SRC) += src.o
 obj-$(CONFIG_CPU_V7) += head-v7.o
-AFLAGS_head-v7.o :=-Wa,-march=armv7-a
+AFLAGS_head-v7.o :=-Wa,-mcpu=cortex-a7
 obj-$(CONFIG_SMP) += platsmp.o
 obj-$(CONFIG_HOTPLUG_CPU) += hotplug.o
 obj-$(CONFIG_SOC_IMX6Q) += clock-imx6q.o mach-imx6q.o
diff --git a/arch/arm/mach-omap2/Makefile b/arch/arm/mach-omap2/Makefile
index 49f92bc1..d673f747 100644
--- a/arch/arm/mach-omap2/Makefile
+++ b/arch/arm/mach-omap2/Makefile
@@ -30,9 +30,9 @@ obj-$(CONFIG_ARCH_OMAP4)		+= omap4-common.o omap-wakeupgen.o \
 					   sleep44xx.o
 
 plus_sec := $(call as-instr,.arch_extension sec,+sec)
-AFLAGS_omap-headsmp.o			:=-Wa,-march=armv7-a$(plus_sec)
-AFLAGS_omap-smc.o			:=-Wa,-march=armv7-a$(plus_sec)
-AFLAGS_sleep44xx.o			:=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_omap-headsmp.o			:=-Wa,-mcpu=cortex-a7$(plus_sec)
+AFLAGS_omap-smc.o			:=-Wa,-mcpu=cortex-a7$(plus_sec)
+AFLAGS_sleep44xx.o			:=-Wa,-mcpu=cortex-a7$(plus_sec)
 
 # Functions loaded to SRAM
 obj-$(CONFIG_SOC_OMAP2420)		+= sram242x.o
@@ -41,7 +41,7 @@ obj-$(CONFIG_ARCH_OMAP3)		+= sram34xx.o
 
 AFLAGS_sram242x.o			:=-Wa,-march=armv6
 AFLAGS_sram243x.o			:=-Wa,-march=armv6
-AFLAGS_sram34xx.o			:=-Wa,-march=armv7-a
+AFLAGS_sram34xx.o			:=-Wa,-mcpu=cortex-a7
 
 # Pin multiplexing
 obj-$(CONFIG_SOC_OMAP2420)		+= mux2420.o
@@ -73,7 +73,7 @@ obj-$(CONFIG_OMAP_SMARTREFLEX)          += sr_device.o smartreflex.o
 obj-$(CONFIG_OMAP_SMARTREFLEX_CLASS3)	+= smartreflex-class3.o
 
 AFLAGS_sleep24xx.o			:=-Wa,-march=armv6
-AFLAGS_sleep34xx.o			:=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_sleep34xx.o			:=-Wa,-mcpu=cortex-a7$(plus_sec)
 
 ifeq ($(CONFIG_PM_VERBOSE),y)
 CFLAGS_pm_bus.o				+= -DDEBUG
diff --git a/arch/arm/mach-exynos/Makefile b/arch/arm/mach-exynos/Makefile
index b3083048..f68e4b76 100644
--- a/arch/arm/mach-exynos/Makefile
+++ b/arch/arm/mach-exynos/Makefile
@@ -108,7 +108,7 @@ obj-$(CONFIG_EXYNOS54XX_DEBUG)		+= debug_exynos54XX.o
 
 obj-$(CONFIG_ARM_TRUSTZONE)		+= smc.o
 plus_sec := $(call as-instr,.arch_extension sec,+sec)
-AFLAGS_smc.o :=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_smc.o :=-Wa,-mcpu=cortex-a7$(plus_sec)
 
 # machine support
 
diff --git a/arch/arm/plat-s5p/Makefile b/arch/arm/plat-s5p/Makefile
index 7c15ec60..ba2b4d15 100644
--- a/arch/arm/plat-s5p/Makefile
+++ b/arch/arm/plat-s5p/Makefile
@@ -19,7 +19,7 @@ obj-$(CONFIG_S5P_GPIO_INT)	+= irq-gpioint.o
 obj-$(CONFIG_S5P_PM)		+= pm.o irq-pm.o
 obj-$(CONFIG_S5P_SLEEP)		+= sleep.o
 plus_sec := $(call as-instr,.arch_extension sec,+sec)
-AFLAGS_sleep.o :=-Wa,-march=armv7-a$(plus_sec)
+AFLAGS_sleep.o :=-Wa,-mcpu=cortex-a7$(plus_sec)
 obj-$(CONFIG_S5P_HRT) 		+= s5p-time.o
 
 # devices
